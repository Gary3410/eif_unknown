
# TODO: Info dict
# {'obstacle_map': array([[0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        ...,
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.]], dtype=float32), 'goal_map': array([[0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        ...,
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.]]), 'frontier_map': array([[0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        ...,
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.],
#        [0., 0., 0., ..., 0., 0., 0.]]), 'sensor_pose': array([ 24.,  24.,   0., 240., 720., 240., 720.], dtype=float32), 'found_goal': False, 'goal_name': 'Move shoe from washer_dryer to table', 'semantic_frame': array([[[ 85,  44,  39,  23],
#         [ 84,  40,  37,  23],
#         [ 85,  38,  35,  23],
#         ...,
#         [133, 127, 119,  13],
#         [133, 127, 119,  13],
#         [133, 127, 119,  13]],
#
#        [[ 85,  44,  39,  23],
#         [ 86,  43,  39,  23],
#         [ 41,  63,  23,  23],
#         ...,
#         [133, 127, 119,  13],
#         [133, 127, 119,  13],
#         [133, 127, 119,  13]],
#
#        [[ 45,  67,  27,  23],
#         [ 40,  61,  23,  23],
#         [ 39,  60,  22,  23],
#         ...,
#         [133, 127, 119,  13],
#         [133, 127, 119,  13],
#         [133, 127, 119,  13]],
#
#        ...,
#
#        [[165, 151, 133,  18],
#         [165, 151, 133,  18],
#         [165, 151, 133,  18],
#         ...,
#         [166, 152, 132,  18],
#         [166, 152, 132,  18],
#         [166, 152, 132,  18]],
#
#        [[165, 151, 132,  18],
#         [165, 151, 132,  18],
#         [165, 151, 132,  18],
#         ...,
#         [166, 152, 132,  18],
#         [166, 152, 132,  18],
#         [166, 152, 132,  18]],
#
#        [[165, 151, 132,  18],
#         [165, 151, 132,  18],
#         [165, 151, 132,  18],
#         ...,
#         [166, 152, 132,  18],
#         [166, 152, 132,  18],
#         [166, 152, 132,  18]]], dtype=uint8), 'semantic_category_mapping': None, 'third_person_image': None, 'timestep': 1, 'curr_skill': 'NAV_TO_OBJ', 'skill_done': '', 'is_curr_skill_NAV_TO_OBJ': 1, 'is_curr_skill_GAZE_AT_OBJ': 0, 'is_curr_skill_PICK': 0, 'is_curr_skill_NAV_TO_REC': 0, 'is_curr_skill_GAZE_AT_REC': 0, 'is_curr_skill_PLACE': 0, 'is_curr_skill_EXPLORE': 0, 'is_curr_skill_NAV_TO_INSTANCE': 0, 'is_curr_skill_FALL_WAIT': 0, 'curr_action': 'TURN_RIGHT'}

# TODO: Obs_dict
# Observations(gps=array([ 0., -0.], dtype=float32), compass=array([-0.5235989], dtype=float32), rgb=array([[[ 85,  41,  39],
#         [ 85,  41,  39],
#         [ 90,  45,  43],
#         ...,
#         [  1,   1,   0],
#         [  1,   1,   0],
#         [  1,   1,   0]],
#
#        [[ 85,  41,  39],
#         [ 83,  39,  37],
#         [ 88,  44,  41],
#         ...,
#         [  1,   1,   0],
#         [  1,   1,   0],
#         [  1,   1,   0]],
#
#        [[ 86,  42,  40],
#         [ 83,  39,  37],
#         [ 85,  41,  39],
#         ...,
#         [  1,   1,   0],
#         [  1,   1,   0],
#         [  1,   1,   0]],
#
#        ...,
#
#        [[171, 156, 136],
#         [171, 156, 136],
#         [171, 156, 136],
#         ...,
#         [ 17,  17,  15],
#         [ 17,  17,  15],
#         [ 17,  17,  15]],
#
#        [[171, 156, 136],
#         [171, 156, 136],
#         [171, 156, 136],
#         ...,
#         [ 17,  17,  15],
#         [ 17,  17,  15],
#         [ 17,  17,  15]],
#
#        [[170, 156, 136],
#         [170, 156, 136],
#         [170, 155, 136],
#         ...,
#         [ 17,  17,  15],
#         [ 17,  17,  15],
#         [ 17,  17,  15]]], dtype=uint8), depth=array([[1.9209938 , 1.9223585 , 1.9237031 , ..., 2.6049817 , 2.6077752 ,
#         2.6105347 ],
#        [1.9221163 , 1.9234825 , 1.9248288 , ..., 2.6072893 , 2.6100879 ,
#         2.612852  ],
#        [1.92324   , 1.924608  , 1.9259777 , ..., 2.6096008 , 2.6123638 ,
#         2.6151733 ],
#        ...,
#        [0.44000715, 0.43999907, 0.439991  , ..., 1.3795717 , 1.3795489 ,
#         1.3795264 ],
#        [0.43935615, 0.43934923, 0.43934113, ..., 1.3775554 , 1.3775327 ,
#         1.3775101 ],
#        [0.43870813, 0.43870008, 0.43869323, ..., 1.3755336 , 1.3755109 ,
#         1.3754885 ]], dtype=float32), xyz=None, semantic=array([[23, 23, 23, ..., 23, 23, 23],
#        [23, 23, 23, ..., 23, 23, 23],
#        [23, 23, 23, ..., 23, 23, 23],
#        ...,
#        [18, 18, 18, ..., 23, 23, 23],
#        [18, 18, 18, ..., 23, 23, 23],
#        [18, 18, 18, ..., 23, 23, 23]]), camera_K=array([[625.22137553,   0.        , 239.5       ],
#        [  0.        , 625.22137553, 319.5       ],
#        [  0.        ,   0.        ,   1.        ]]), instance=None, third_person_image=None, camera_pose=array([[-0.42867154,  0.86596143,  0.25758797,  0.13383937],
#        [-0.752512  , -0.5000089 ,  0.4286221 ,  0.20351624],
#        [ 0.4999665 , -0.01009995,  0.86598575,  1.3117847 ],
#        [ 0.        ,  0.        ,  0.        ,  1.        ]],
#       dtype=float32), joint=array([ 0.    ,  0.    ,  0.    ,  0.    ,  0.775 ,  0.    , -1.57  ,
#         0.    ,  0.    , -0.5236], dtype=float32), relative_resting_position=array([0.38784838, 0.12924838, 0.42244148], dtype=float32), is_holding=None, task_observations={'object_embedding': array([-2.5952e-01, -1.9409e-02,  1.1902e-01, -2.5000e-01, -3.1348e-01,
#         1.2854e-01,  2.0044e-01, -5.8203e-01, -1.2891e-01,  6.9092e-02,
#        -2.1289e-01, -5.2979e-01,  4.2305e-03, -8.2703e-03,  1.4709e-01,
#        -9.5032e-02, -2.7142e-03,  3.5034e-02, -1.4069e-02, -2.4792e-01,
#         5.1465e-01,  1.0931e-01,  4.7272e-02,  2.8931e-01,  6.3599e-02,
#        -2.2607e-01,  1.9165e-01,  5.4785e-01, -1.9458e-01,  1.3159e-01,
#         1.4328e-02,  1.6016e-01, -2.2141e-02, -1.1127e-01, -2.6733e-01,
#        -3.9502e-01,  3.1421e-01, -7.5439e-02, -9.9609e-02,  2.3767e-01,
#         9.7839e-02, -3.2861e-01,  2.8101e-01, -3.3350e-01,  3.6426e-01,
#         1.0883e-01,  3.6353e-01,  3.1525e-02,  9.2651e-02,  2.1027e-02,
#        -6.8237e-02,  8.8379e-02,  2.1899e-01, -7.9248e-01, -3.5303e-01,
#        -1.2183e-01,  1.7175e-01, -6.9885e-02, -1.1768e-01, -8.4106e-02,
#         2.5073e-01, -2.0374e-01, -1.6577e-01, -2.2888e-01,  1.0089e-01,
#         9.8694e-02,  1.5405e-01,  1.5039e-01,  2.6782e-01, -1.5137e-01,
#         4.0924e-02, -5.5695e-02,  8.5449e-02,  3.0298e-01,  1.6284e-01,
#         2.1704e-01,  1.2372e-01,  3.7170e-02,  1.9800e-01, -5.9033e-01,
#        -6.8207e-03,  1.9470e-02, -4.1962e-02, -2.1973e-01,  8.9294e-02,
#         3.1030e-01,  3.8257e-01, -3.1543e-01,  1.0638e-01, -1.5076e-01,
#        -2.1997e-01, -2.6587e-01, -1.3799e+00,  6.3477e-01,  1.2543e-02,
#        -1.0968e-01, -2.7954e-01,  3.5010e-01, -3.0566e-01, -1.5823e-02,
#         1.0857e-02, -2.1350e-01,  1.4191e-02,  1.4417e-01,  1.6968e-02,
#         9.7778e-02, -1.9211e-02,  3.8223e-03,  4.7455e-02,  5.3986e-02,
#        -3.4570e-01, -1.6739e-02,  2.7393e-01, -1.3501e-01, -2.5314e-02,
#         2.1448e-01,  2.8931e-01,  1.8616e-01,  3.9087e-01,  6.3354e-02,
#        -2.4426e-01, -7.8809e-01,  7.2327e-02, -3.2013e-02,  3.8208e-01,
#        -1.9604e-01, -2.4768e-01, -2.4109e-01,  3.9734e-02,  4.1724e-01,
#        -2.9160e-02, -2.8882e-01, -3.0273e-01,  5.6719e+00, -7.6172e-02,
#        -1.5503e-01, -3.1152e-01, -5.0635e-01, -2.6566e-02, -3.7793e-01,
#        -2.9980e-01,  3.4814e-01, -1.6284e-01,  1.2927e-01, -7.4524e-02,
#         1.8872e-01, -1.3367e-01, -7.0752e-01,  3.0371e-01, -8.8043e-03,
#         3.2129e-01,  9.8206e-02,  3.7061e-01,  9.5215e-02, -2.5781e-01,
#         6.4880e-02,  1.5637e-01, -5.2032e-02,  7.4402e-02,  6.1371e-02,
#        -2.2449e-01, -1.6980e-01,  3.7939e-01, -7.6172e-02, -3.7720e-02,
#        -1.6895e-01,  3.2617e-01, -7.0020e-01,  2.4866e-01,  8.0643e-03,
#        -1.8250e-01, -2.2571e-01, -1.1835e-01, -3.5217e-02, -6.0449e-01,
#         3.4937e-01, -3.9520e-02,  5.5762e-01,  1.6479e-02, -1.7834e-01,
#        -2.1027e-02,  3.3203e-01, -1.4197e-01,  3.0420e-01, -1.4795e-01,
#         1.3757e-01,  2.6416e-01,  5.4016e-02, -2.2754e-01,  2.3584e-01,
#         2.3621e-01, -1.2646e-01,  1.5466e-01,  3.1860e-01,  1.8604e-01,
#         1.7773e-01, -1.4551e-01, -2.9272e-01, -2.6831e-01, -3.5156e-01,
#        -2.2363e-01, -2.6221e-01,  3.4180e-01,  1.4453e-01, -1.3232e-01,
#        -2.3462e-01,  2.0874e-01, -2.3804e-01, -9.7179e-04, -9.6619e-02,
#         1.2878e-01,  3.0469e-01,  4.2725e-01,  3.1055e-01, -2.3340e-01,
#         1.0858e-01, -2.6077e-02, -3.0737e-01, -2.6123e-01,  1.4563e-01,
#         5.3955e-01, -2.9565e-01,  3.1445e-01, -1.1359e-01, -1.4075e-01,
#        -7.4707e-01,  3.8745e-01,  7.5195e-02, -1.8701e-01,  7.7209e-02,
#        -5.0964e-02,  2.5122e-01, -8.0750e-02, -8.4076e-03,  1.1182e-01,
#        -1.7029e-01, -3.5400e-01, -2.2705e-01,  2.1631e-01, -9.6863e-02,
#         6.5613e-02,  2.2021e-01,  6.9824e-02,  3.6646e-01, -6.7078e-02,
#        -2.9892e-02,  2.2754e-01, -7.6782e-02,  3.0762e-02, -1.1035e-01,
#        -1.6077e-01, -3.0591e-01,  3.1665e-01,  2.2192e-01, -1.8237e-01,
#        -3.9966e-01,  1.4880e-01,  1.1957e-01,  4.3213e-02,  3.9990e-01,
#        -4.2053e-02,  2.3010e-01, -8.8867e-02,  5.9479e-02, -2.4304e-01,
#         1.3110e-01,  9.2590e-02,  1.5137e-01, -1.4270e-01,  5.6549e-02,
#        -5.6641e-01, -5.9509e-03, -1.1314e-02, -1.8384e-01,  5.3833e-02,
#         1.6309e-01,  1.6162e-01,  1.7944e-01,  1.5320e-01,  1.2512e-02,
#         3.1079e-01,  1.2183e-01,  4.9591e-02, -2.6138e-02, -4.8193e-01,
#         2.0660e-02, -7.7942e-02,  4.7028e-02,  3.6475e-01, -2.3157e-01,
#         6.4502e-01,  6.5918e-02, -2.4170e-02,  3.1299e-01, -5.9021e-02,
#        -2.5122e-01, -1.5088e-01, -1.3818e-01,  1.1603e-01,  5.4962e-02,
#         8.0933e-02, -5.2307e-02,  1.2061e-01,  1.7969e-01,  2.5977e-01,
#        -3.9233e-01, -1.9238e-01, -1.1517e-01, -2.0215e-01, -3.7305e-01,
#        -2.6154e-02, -1.2402e-01,  5.6719e+00,  1.8042e-01, -6.4697e-02,
#         1.2917e-02, -1.8823e-01,  2.9346e-01,  3.1421e-01,  7.2327e-02,
#         4.2505e-01,  2.9980e-01,  8.8806e-03, -1.2024e-01, -3.0811e-01,
#         1.8665e-01, -2.8101e-01, -5.2795e-02, -1.1810e-01, -1.4775e+00,
#         1.2352e-02,  9.3445e-02, -1.7676e-01, -8.0383e-02,  1.2018e-01,
#        -2.7417e-01,  8.5876e-02, -3.8086e-02,  2.5366e-01,  1.4331e-01,
#        -2.7563e-01, -3.6523e-01, -1.5759e-01, -3.4790e-01,  1.5686e-01,
#        -1.0248e-01, -6.7688e-02,  2.8198e-01, -1.9666e-01,  2.5452e-02,
#         2.9858e-01, -1.4185e-01,  2.1655e-01,  2.4500e-01, -1.5930e-01,
#        -2.7637e-01,  2.7725e-02,  1.2405e-02,  3.9233e-01,  2.8076e-01,
#         2.4536e-01, -2.5732e-01, -2.6514e-01,  1.6760e-01,  3.4839e-01,
#         2.5635e-01,  4.3701e-01,  1.7395e-01,  1.7920e-01, -1.6284e-01,
#        -3.8696e-01,  1.4526e-01, -1.6553e-01,  1.1133e-01, -4.3030e-02,
#        -1.9995e-01,  7.7942e-02,  4.9194e-02, -1.9299e-01, -3.1934e-01,
#         3.0518e-01, -4.9500e-02,  1.5405e-01, -6.7188e-01,  1.5198e-01,
#        -1.0931e-01, -3.4033e-01, -1.2231e-01, -2.8564e-01, -1.5967e-01,
#        -4.8120e-01,  4.3677e-01, -3.2568e-01, -9.5215e-02, -3.2397e-01,
#         1.2372e-01,  5.8197e-02, -4.0381e-01, -2.3889e-01,  1.5906e-01,
#        -1.2219e-01, -7.6843e-02,  1.6479e-01, -3.4521e-01, -4.6043e-03,
#        -1.2036e-01,  1.3257e-01,  1.3330e-01, -3.9722e-01,  5.4230e-02,
#         1.2482e-01, -3.9185e-01, -8.4290e-02,  1.9788e-01, -1.6895e-01,
#         1.5735e-01, -5.8044e-02, -1.9971e-01, -3.3228e-01, -2.3157e-01,
#        -1.3562e-01,  1.1011e-01,  1.8201e-01, -5.0146e-01, -1.9714e-01,
#         6.9641e-02, -3.6304e-01, -2.3157e-01,  1.3477e-01,  3.8647e-01,
#        -2.4307e-02, -3.0127e-01,  1.4575e-01,  2.0554e-02, -3.8940e-01,
#        -4.5947e-01, -5.4993e-02,  1.6443e-01, -1.4026e-01,  1.8677e-01,
#        -1.9312e-01,  2.5284e-02,  2.5903e-01, -2.2522e-02,  2.7122e-03,
#         3.6328e-01, -1.5015e-01, -5.3711e-01,  1.7578e-01,  6.3477e-02,
#        -4.1797e-01,  4.3359e-01,  3.6890e-01,  1.4275e-02, -2.7124e-01,
#         1.1108e-01,  1.9592e-01,  1.2158e-01, -4.0161e-01, -5.4248e-01,
#        -2.1924e-01,  4.6875e-01, -7.7591e-03,  2.7075e-01,  3.7598e-01,
#         1.0516e-01,  1.8311e-01, -2.9248e-01, -1.4392e-01, -2.6611e-01,
#        -4.8218e-01, -2.7612e-01, -9.3750e-02, -4.9902e-01, -9.6619e-02,
#         2.4255e-01, -1.8936e-02, -6.7383e-02, -2.4097e-01,  2.1545e-01,
#         1.0242e-01, -3.7866e-01, -7.8186e-02, -6.6895e-02, -3.8647e-01,
#        -3.7939e-01,  4.0894e-01,  9.2651e-02,  2.0508e-01, -2.3584e-01,
#         4.8431e-02, -1.8445e-01,  1.0083e-01,  1.0059e+00,  2.6343e-01,
#         1.7639e-02,  3.6035e-01, -1.0254e-01, -1.5027e-01, -1.5015e-01,
#         1.3403e-01,  1.9995e-01, -3.3105e-01,  4.7876e-01,  3.1348e-01,
#        -2.7905e-01, -3.2104e-01,  3.8330e-01,  5.7251e-02, -5.3467e-01,
#        -3.6804e-02, -1.6833e-01], dtype=float16), 'start_receptacle': array([20]), 'goal_receptacle': array([16]), 'prev_grasp_success': array([1.], dtype=float32), 'goal_name': 'Move shoe from washer_dryer to table', 'object_name': 'shoe', 'start_recep_name': 'washer_dryer', 'place_recep_name': 'table', 'object_goal': 1, 'start_recep_goal': 22, 'end_recep_goal': 18, 'recep_idx': 2, 'semantic_max_val': 23, 'gt_instance_ids': array([[ 0,  0,  0, ..., 10, 10, 10],
#        [ 0,  0,  0, ..., 10, 10, 10],
#        [ 0,  0,  0, ..., 10, 10, 10],
#        ...,
#        [74, 74, 74, ..., 16, 16, 16],
#        [74, 74, 74, ..., 16, 16, 16],
#        [74, 74, 74, ..., 16, 16, 16]], dtype=int32), 'instance_map': array([[ 0,  0,  0, ..., 10, 10, 10],
#        [ 0,  0,  0, ..., 10, 10, 10],
#        [ 0,  0,  0, ..., 10, 10, 10],
#        ...,
#        [74, 74, 74, ..., 16, 16, 16],
#        [74, 74, 74, ..., 16, 16, 16],
#        [74, 74, 74, ..., 16, 16, 16]], dtype=int32)})

# TODO: Habitat_Info
# {'ovmm_object_to_place_goal_distance': {'0': 1.2215110291365858}, 'articulated_agent_force': {'accum': 0.0, 'instant': 0}, 'force_terminate': False, 'robot_collisions': {'total_collisions': 0, 'robot_obj_colls': 0, 'robot_scene_colls': 0, 'obj_scene_colls': 0}, 'does_want_terminate': False, 'num_steps': 1, 'obj_anywhere_on_goal': {'0': False}, 'ee_to_rest_distance': 0.5878676, 'did_pick_object': 1, 'pick_success': True, 'picked_object_linear_vel': 0.0, 'picked_object_angular_vel': 0.0, 'object_at_rest': True, 'ovmm_placement_stability': False, 'ovmm_place_success': False, 'ovmm_dist_to_pick_goal': 6.452905178070068, 'ovmm_rot_dist_to_pick_goal': 1.6647391686447188, 'pick_goal_iou_coverage': 0, 'ovmm_nav_to_pick_succ': False, 'ovmm_nav_orient_to_pick_succ': False, 'ovmm_dist_to_place_goal': 0.0, 'ovmm_rot_dist_to_place_goal': 0.5275172799784307, 'place_goal_iou_coverage': 0.2588020833333333, 'ovmm_nav_to_place_succ': True, 'ovmm_nav_orient_to_place_succ': True, 'ovmm_find_object_phase_success': False, 'ovmm_pick_object_phase_success': False, 'ovmm_find_recep_phase_success': False, 'ovmm_place_object_phase_success': False, 'navmesh_collision': 0, 'is_curr_skill_NAV_TO_OBJ': 1, 'is_curr_skill_GAZE_AT_OBJ': 0, 'is_curr_skill_PICK': 0, 'is_curr_skill_NAV_TO_REC': 0, 'is_curr_skill_GAZE_AT_REC': 0, 'is_curr_skill_PLACE': 0, 'is_curr_skill_EXPLORE': 0, 'is_curr_skill_NAV_TO_INSTANCE': 0, 'is_curr_skill_FALL_WAIT': 0, 'action': array([ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
#         0.        ,  0.        ,  1.        ,  0.        ,  0.        ,
#        -0.16666667, -1.        ], dtype=float32)}
